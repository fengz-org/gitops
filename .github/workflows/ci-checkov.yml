---
    name: Pull Request validation
    on:
      pull_request:
        branches: [main]
      workflow_dispatch:

    permissions:
      actions: write
      checks: write
      contents: write
      deployments: read
      id-token: write
      issues: write
      discussions: read
      packages: read
      pages: read
      pull-requests: write
      repository-projects: read
      security-events: read
      statuses: write

    jobs:
      danger_check:
        name: Danger Check
        uses: stepchange-org/sc-pipeline-library/.github/workflows/danger-checks.yml@v3.3.0
      checkov:
        name: IaC security scan
        needs: [danger_check]
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: stepchange-org/sc-pipeline-library/.github/workflows/checkov-sc-api.yml@v4.1.0
        with:
          FAIL_ON_SECURITY_ISSUES: 'true'
          FRAMEWORK: 'terraform'
        secrets:
          CHECKOV_CONFIG_CLONE_APP_ID: ${{ secrets.SEMANTIC_RELEASE_BOT_APP_ID }}
          CHECKOV_CONFIG_CLONE_PRIVATE_KEY: ${{ secrets.SEMANTIC_RELEASE_BOT_PRIVATE_KEY }}
      build:
        name: Build
        needs: [checkov]
        if: ${{ always() && (needs.checkov.result == 'success' || needs.checkov.result == 'skipped') }}
        uses: stepchange-org/sc-api/.github/workflows/build.yml@main
      plan_private_gateway:
        name: TF Plan (Private API Gateway)
        needs: [build]
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: stepchange-org/sc-pipeline-library/.github/workflows/terraform-plan-sc-api.yml@v3.12.0
        with:
          src-directory: ./infrastructure/aws/private-gateway-api
          create-netrc: 'true'
          terraform-version: ${{ vars.TF_VERSION }}
          aws-region: ${{ vars.AWS_REGION }}
          init-cmd: '-backend-config=../backend-config/dev/config.s3.tfbackend'
          download-artifact: 'build'
          setup-cmd: 'unzip build.zip'
          tf-vars-json: '{\"deploy_env\":\"dev\"}'
        secrets:
          AWS_ROLE_ARN: ${{ secrets.AWS_DEV_ROLE_ARN }}
          PAT_SECRET: ${{ secrets.PAT_SECRET }}
          GH_USER: ${{ secrets.GH_USER }}
